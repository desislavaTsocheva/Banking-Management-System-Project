@page
@model ChangePasswordModel
@{
    ViewData["Title"] = "Change password";
    ViewData["ActivePage"] = ManageNavPages.ChangePassword;
}

<h4 class="mb-3">@ViewData["Title"]</h4>
<partial name="_StatusMessage" for="StatusMessage" />

<div class="row">
    <div class="col-lg-7">
        <div class="card shadow-sm">
            <div class="card-body">
                <form id="change-password-form" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

                    <div class="mb-3">
                        <label asp-for="Input.OldPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.OldPassword" class="form-control" autocomplete="current-password" placeholder="Current password" />
                            <button type="button" class="btn btn-outline-secondary toggle-visibility" data-target="Input_OldPassword">Show</button>
                        </div>
                        <span asp-validation-for="Input.OldPassword" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Input.NewPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.NewPassword" class="form-control" autocomplete="new-password" placeholder="New password" />
                            <button type="button" class="btn btn-outline-secondary toggle-visibility" data-target="Input_NewPassword">Show</button>
                        </div>
                        <div class="mt-2 d-none" id="pwdStrengthWrap">
                          <div class="progress" style="height: 8px;">
                              <div id="pwdStrengthBar" class="progress-bar" role="progressbar"></div>
                          </div>
                          <small id="pwdStrengthText" class="text-muted"></small>
                      </div>
                        <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" placeholder="Confirm new password" />
                            <button type="button" class="btn btn-outline-secondary toggle-visibility" data-target="Input_ConfirmPassword">Show</button>
                        </div>
                        <small id="matchHint" class="text-muted"></small>
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                    </div>

                    <button id="update-password-btn" type="submit" class="btn btn-primary w-100" disabled>
                        Update password
                    </button>
                </form>
            </div>
        </div>

        <div class="alert alert-info mt-3 mb-0">
            <div class="fw-semibold mb-1">Password tips</div>
            Use at least 8 characters, mix of upper/lowercase, numbers and a symbol.
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Show/Hide buttons
        document.querySelectorAll('.toggle-visibility').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.dataset.target;
                const input = document.getElementById(id);
                if (!input) return;
                input.type = input.type === 'password' ? 'text' : 'password';
                btn.textContent = input.type === 'password' ? 'Show' : 'Hide';
            });
        });

        const newPwd    = document.getElementById('Input_NewPassword');
        const confirmPwd= document.getElementById('Input_ConfirmPassword');
        const oldPwd    = document.getElementById('Input_OldPassword');
        const wrap      = document.getElementById('pwdStrengthWrap');
        const bar       = document.getElementById('pwdStrengthBar');
        const text      = document.getElementById('pwdStrengthText');
        const matchHint = document.getElementById('matchHint');
        const submitBtn = document.getElementById('update-password-btn');

        function strength(p) {
            if (!p) return 0;
            let s = 0;
            if (p.length >= 8) s++;
            if (/[A-Z]/.test(p)) s++;
            if (/[a-z]/.test(p)) s++;
            if (/\d/.test(p)) s++;
            if (/[^A-Za-z0-9]/.test(p)) s++;
            return Math.min(s, 5);
        }

        function updateUI() {
            const hasTyped = newPwd.value.length > 0;

            // Показвай индикатора само ако има въведени символи
            wrap.classList.toggle('d-none', !hasTyped);

            let s = 0;
            if (hasTyped) {
                s = strength(newPwd.value);
                const pct = (s / 5) * 100;
                bar.style.width = pct + '%';
                bar.className = 'progress-bar'; // reset
                if (s <= 3) { bar.classList.add('bg-danger');  text.textContent = 'Weak'; }
                else if (s === 4) { bar.classList.add('bg-warning'); text.textContent = 'Medium'; }
                else { bar.classList.add('bg-success'); text.textContent = 'Strong'; }
            } else {
                // изчисти всичко, ако полето е празно
                bar.style.width = '0%';
                bar.className = 'progress-bar';
                text.textContent = '';
            }

            // Показвай „Passwords do not match“ само ако е писано в confirm
            const showMismatch = confirmPwd.value.length > 0 && newPwd.value !== confirmPwd.value;
            matchHint.textContent = showMismatch ? 'Passwords do not match' : '';

            const ready = oldPwd.value.length > 0 &&
                          newPwd.value.length > 0 &&
                          newPwd.value === confirmPwd.value &&
                          s >= 3;
            submitBtn.disabled = !ready;
        }

        [newPwd, confirmPwd, oldPwd].forEach(i => i.addEventListener('input', updateUI));
        // без първоначално извикване, за да не се вижда индикатора при празно поле
    </script>
}

